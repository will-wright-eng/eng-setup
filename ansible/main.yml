---
- hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    ansible_python_interpreter: /opt/homebrew/bin/python3

  tasks:
  - name: Check if Oh My Zsh is installed
    stat:
      path: ~/.oh-my-zsh
    register: oh_my_zsh_dir
    tags:
      - oh-my-zsh

  - name: Install Oh My Zsh
    shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    args:
      executable: /bin/bash
    when: not oh_my_zsh_dir.stat.exists
    tags:
      - oh-my-zsh

  - name: Install Homebrew packages
    homebrew:
      name: "{{ item }}"
      state: present
    with_items:
      - node
      - rectangle
      - bat
      - gh
      - tree
      - thefuck
      - btop
      - dnsmasq
      - rar
      - google-cloud-sdk
      - openssh
      - pre-commit
      - jq
      - ack
      - go
      - opentofu
      - atuin
      - zsh-autosuggestions
      - zsh-syntax-highlighting
      - kubectl
      - wget
      - hugo
    ignore_errors: yes
    tags:
      - brew-packages

  - name: Install Homebrew cask applications
    homebrew_cask:
      name: "{{ item }}"
      state: present
    with_items:
      - ghostty
      - cursor
      - brave-browser
      - zoom
      - raycast
      - modern-csv
      - orbstack
      - sqlitestudio
      - gopanda
    ignore_errors: yes
    tags:
      - brew-casks

  - name: Remove existing .zshrc if it exists
    file:
      path: ~/.zshrc
      state: absent
    tags:
      - zsh-config

  - name: Configure Oh My Zsh
    blockinfile:
      path: ~/.zshrc
      block: |
        # ZSH
        ZSH_THEME="robbyrussell"
        plugins=(git git-prompt web-search jsontools)
        export ZSH="$HOME/.oh-my-zsh"
        source $ZSH/oh-my-zsh.sh

        # for mac M series
        source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
        source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

        # for mac intel
        # source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
        # source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

        RPROMPT='%*'

        # ALIAS
        source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
        eval $(thefuck --alias)

        alias cat='bat --paging=never'
        alias ll='ls -lah'
        alias la='ls -A'
        alias l='ls -CF'
        alias zshconfig="mate ~/.zshrc"
        alias ohmyzsh="mate ~/.oh-my-zsh"

        source ~/keys
        eval "$(atuin init zsh --disable-up-arrow)"

        create_env_example() {
            if [ "$#" -ne 1 ]; then
                echo "Usage: dotenvex <path-to-env-file>"
                return 1
            fi

            local ENV_FILE="$1"
            local ENV_EXAMPLE_FILE="${ENV_FILE}.example"

            awk -F '=' '/=/ {
                if (tolower($1) ~ /(key|token|secret|password)/) {
                    print $1 "=REDACTED"
                } else {
                    print $1 "=" $2
                }
            } ! /=/ { print }' "$ENV_FILE" > "$ENV_EXAMPLE_FILE"
            echo "Example environment file created: $ENV_EXAMPLE_FILE"
        }

        alias dotenvex="create_env_example"
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      create: yes
      backup: yes
    tags:
      - zsh-config

  - name: Create miniconda directory
    file:
      path: ~/miniconda3
      state: directory
    tags:
      - miniconda

  - name: Download Miniconda installer
    get_url:
      url: https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh
      dest: ~/miniconda3/miniconda.sh
      mode: '0755'
    tags:
      - miniconda

  - name: Install Miniconda
    shell: bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
    args:
      creates: ~/miniconda3/bin/conda
    tags:
      - miniconda

  - name: Remove Miniconda installer
    file:
      path: ~/miniconda3/miniconda.sh
      state: absent
    tags:
      - miniconda

  - name: Source conda activate
    shell: source ~/miniconda3/bin/activate
    args:
      executable: /bin/bash
    tags:
      - miniconda

  - name: Initialize conda
    shell: ~/miniconda3/bin/conda init --all
    args:
      executable: /bin/bash
    tags:
      - miniconda

  post_tasks:
  - name: Display Rye installation instructions
    debug:
      msg: |
        Please install Rye in an interactive shell by running:

        curl -sSf https://rye.astral.sh/get | bash

        After installation, add this to your shell config (~/.zshrc):
        source "$HOME/.rye/env"

        Then restart your shell or run:
        source ~/.zshrc

        Add Python shim global installs to PATH:
        export PATH="$HOME/.rye/py/cpython@3.12.8/bin:$PATH"
    tags:
      - rye

  - name: Install shell-gpt using pip
    pip:
      name: shell-gpt
      state: present
    tags:
      - pip-packages
